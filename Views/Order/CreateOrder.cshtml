@using Rozetka.Models.ViewModels.Cart
@using Rozetka.Data.Entity
@model CartViewModel
@{
    ViewData["Title"] = "Оформлення замовлення";
    //int index = 0;
}

<h3>Оформлення замовлення</h3>
<br />
<h5>Ваші контактні дані</h5>

<div class="row">
    <!-- Левая колонка -->
    <div class="col-md-4">

        @* <div class="form-check">
        <input class="form-check-input custom-radio" type="radio" name="otherRecipient" id="forme" checked>
        <label class="form-check-label" for="otherRecipient">Замовити для себе</label>
        </div> *@
        <br />
        <div class="mb-3">
            <label for="firstName" class="form-label" style="color:#6B6B6B">Ім’я</label>
            <input type="text" class="enter-reg" id="firstName" value="@(Model.FirstName ?? String.Empty)">
        </div>



        <div class="mb-3">
            <label for="phone" class="form-label" style="color:#6B6B6B">Мобільний телефон</label>
            <input type="tel" class="enter-reg" id="phone" value="@(Model.PhoneNumber ?? String.Empty)">
        </div>



        <div class="mb-3">


            <div>
                <input class="custom-checkbox" type="checkbox" name="otherRecipient" id="otherRecipient" style="margin: 0px">
                <label class="form-check-label" for="otherRecipient" style="position: relative; top: -4px;">Інший отримувач</label>
            </div>
        </div>

        <div class="mb-3">
            <label for="otherFirstName" class="form-label" style="color:#6B6B6B">Ім’я</label>
            <input type="text" class="enter-reg" id="otherFirstName">
        </div>



        <div class="mb-3">
            <label for="otherPhone" class="form-label" style="color:#6B6B6B">Мобільний телефон</label>
            <input type="tel" class="enter-reg" id="otherPhone">
        </div>

        <h5>Доставка</h5>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="delivery" id="pickup" value="pickup">
            <label class="form-check-label" for="pickup">Самовивіз з наших магазинів</label>
        </div>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="delivery" id="courier" value="courier">
            <label class="form-check-label" for="courier">Кур'єр на вашу адресу</label>
        </div>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="delivery" id="novaPoshta" value="novaPoshta" checked>
            <label class="form-check-label" for="novaPoshta">На відділення Нової пошти</label>
        </div>
        <br />
        <div class="mb-3">
            <label for="city" class="form-label" style="color:#6B6B6B">Місто або населенний пункт</label>
            <input type="text" class="enter-reg" id="city">
        </div>

        <div class="mb-3">
            <label for="postOffice" class="form-label" style="color:#6B6B6B">Відділення</label>
            <input type="text" class="enter-reg" id="postOffice">
        </div>

        <h5>Оплата</h5>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="payment" id="paymentUponReceipt" value="paymentUponReceipt" checked>
            <label class="form-check-label" for="paymentUponReceipt">Оплата при отримані</label>
        </div>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="payment" id="onlinePayment" value="onlinePayment">
            <label class="form-check-label" for="onlinePayment">Оплата онлайн</label>
        </div>
        <div class="form-check">
            <input class="form-check-input custom-radio" type="radio" name="payment" id="sellerCard" value="sellerCard">
            <label class="form-check-label" for="sellerCard">На картку продавцю</label>
        </div>
    </div>

    <!-- Центральная колонка -->


    <div class="col-md-4">

        <div class="mb-3" style="margin-top: 25px">
            <label for="lastName" class="form-label" style="color:#6B6B6B">Прізвище</label>
            <input type="text" class="enter-reg" id="lastNameС" value="@(Model.LastName ?? String.Empty)">
        </div>

        <div class="mb-3">
            <label for="email" class="form-label" style="color:#6B6B6B">Електронна пошта</label>
            <input type="email" class="enter-reg" id="emailС" value="@(Model.Email ?? String.Empty)">
        </div>

        <div class="mb-3" style="margin-top: 55px; color:#6B6B6B">
            <label for="otherLastName" class="form-label">Прізвище</label>
            <input type="text" class="enter-reg" id="otherLastName">
        </div>


    </div>

    <!-- Правая колонка: Товары -->
    <div class="col-md-4">
        <table class="cart-container" style="border-radius: 15px; background-color: #F1F1F1; margin: 2px; padding: 15px;">
            <thead>
                <tr>
                    <th colspan="2" style="padding: 15px;">
                        <h3 style="padding: 10px;">Разом</h3>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (CartItem cartItem in Model.CartItems)
                {

                    <tr>
                        <td style="padding: 15px;">
                            @if (cartItem.Product!.ProductImages!.Any())
                            {
                                <img src="data:image/*;base64,@(Convert.ToBase64String(cartItem.Product.ProductImages!.FirstOrDefault()!.ImageData!))"
                                     class="card-img-top" alt="@cartItem.Product.Title"
                                     style="height: 100px;width: auto;object-fit: contain;">
                            }
                            else
                            {
                                <img src="~/photoproducts/no-image.jpg" alt="no-image" style="height: 100px;width: auto;object-fit: contain;" />
                            }
                        </td>
                        <td style="padding: 5px;">
                            @cartItem.Product.Brand!.Title @cartItem.Product.Title
                            @if (cartItem.Count > 1)
                            {
                                <span style="color: fuchsia; font-weight: bold;">x @cartItem.Count</span>
                            }
                        </td>
                    </tr>
                }

                <!--  таблица для бонусов и информации по оплате -->
                <tr>
                    <td colspan="2">
                        <table style="width: 100%;">
                            <tr>
                                <td style="padding: 10px;">Використати бонусні кошти</td>
                                <td style="padding: 10px;">
                                    <input class="form-check-input custom-radio" type="radio" name="bonus" id="sellerCard2" value="sellerCard2">
                                </td>
                            </tr>
                            <tr>
                                <td style="padding: 10px;">Вартість доставки</td>
                                <td style="padding: 10px;">від 139 грн</td>
                            </tr>
                            <tr>
                                <td style="padding: 10px;">До сплати</td>
                                <td style="padding: 10px;">@Model.TotalPrice грн</td>
                            </tr>
                        </table>
                    </td>
                </tr>

                <!-- Кнопка подтверждения заказа -->
                <tr>
                    <td colspan="2" style="padding: 15px;">
                        <form action="@Url.Action("ConfirmOrder", "Order")" method="post">
                            <button type="submit" id="OrderCompleteButton" class="btn btn-purple" style="width: 90%;">Замовлення підтверджую</button>
                        </form>
                        @* <button type="button" class="btn btn-purple" style="width: 90%;" onclick="redirectToSuccess()">Замовлення підтверджую</button> *@
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
</div>





    <!-- Переключение чекбокса "Другой получатель" -->

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const otherRecipientCheckbox = document.getElementById('otherRecipient');
            const otherFields = [
                document.getElementById('otherFirstName'),
                document.getElementById('otherPhone'),
                document.getElementById('otherLastName')
            ];

            const mainFields = [
                document.getElementById('firstName'),
                document.getElementById('phone'),
                document.getElementById('lastNameС'),
                document.getElementById('emailС')
            ];

            const orderCompleteButton = document.getElementById('OrderCompleteButton');

            // Функция для проверки состояния кнопки
            function validateForm() {
                // Проверяем заполненность полей
                const isMainFieldsValid = mainFields.every(field => field.value.trim().length > 0);
                const isOtherFieldsValid = otherFields.every(field => field.value.trim().length > 0);

                // Активируем кнопку, если хотя бы одни поля заполнены
                orderCompleteButton.disabled = !(isMainFieldsValid || isOtherFieldsValid);
            }

            // Функция для обновления состояния полей
            function toggleFields() {
                const isChecked = otherRecipientCheckbox.checked;

                // Включаем или отключаем поля для другого получателя
                otherFields.forEach(field => {
                    field.disabled = !isChecked;
                    if (!isChecked) field.value = ''; // Очищаем значения, если поля отключены
                });

                // Отключаем поля основного получателя
                mainFields.forEach(field => {
                    field.disabled = isChecked;
                    if (isChecked) field.value = ''; // Очищаем значения, если поля отключены
                });

                // Проверяем заполненность после изменения состояния полей
                validateForm();
            }

            // Добавляем обработчик события на чекбокс
            otherRecipientCheckbox.addEventListener('change', toggleFields);

            // Добавляем обработчики событий на все поля для валидации
            [...mainFields, ...otherFields].forEach(field => {
                field.addEventListener('input', validateForm);
            });

            // Начальная установка полей
            toggleFields(); // Вызываем для установки начального состояния
        });
    </script>

    <!--  для валидации и активации кнопкм -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const fields = {
            firstName: document.getElementById('firstName'),
            phone: document.getElementById('phone'),
            otherFirstName: document.getElementById('otherFirstName'),
            otherPhone: document.getElementById('otherPhone'),
            city: document.getElementById('city'),
            postOffice: document.getElementById('postOffice'),
            lastName: document.getElementById('lastName'),
            email: document.getElementById('emailС'),
            otherLastName: document.getElementById('otherLastName')
        };
        const submitButton = document.getElementById('OrderCompleteButton');

        function isFieldValid(field) {
            if (field.disabled) return true; // Игнорируем отключенные поля
            const value = field.value.trim();

            // Проверяем по ID поля
            switch (field.id) {
                case 'firstName':
                case 'lastName':
                case 'otherFirstName':
                case 'otherLastName':
                case 'city':
                    return value.length >= 2;
                case 'phone':
                case 'otherPhone':
                    return /^\d{10}$/.test(value);
                case 'emailС':
                        return /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(value);
                case 'postOffice':
                    return /^\d{1,3}$/.test(value) && Number(value) >= 1 && Number(value) <= 999;
                default:
                    return true;
            }
        }

        function validateForm() {
            // Активируем кнопку только если все активные поля валидны
            submitButton.disabled = !Object.values(fields).every(isFieldValid);
        }

        // Добавляем обработчик ко всем полям
        Object.values(fields).forEach(field => {
            field.addEventListener('input', validateForm);
            field.addEventListener('change', validateForm); // для учёта переключений
        });

        // Начальная проверка состояния кнопки
        validateForm();
    });
</script>

    
